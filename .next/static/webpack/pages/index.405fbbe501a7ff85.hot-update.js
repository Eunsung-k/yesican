"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/TodoList.js":
/*!************************************!*\
  !*** ./src/components/TodoList.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/react */ \"./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_TodoItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/TodoItem */ \"./src/components/TodoItem.js\");\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/app */ \"./node_modules/firebase/app/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/firebase */ \"./src/firebase/index.js\");\n/* harmony import */ var _tailwind_config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../tailwind.config */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config__WEBPACK_IMPORTED_MODULE_7__);\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n// DB의 todos 컬렉션 참조를 만듭니다. 컬렉션 사용시 잘못된 컬렉션 이름 사용을 방지합니다.\nconst todoCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_6__.db, \"todos\");\nconst publicTodoCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_6__.db, \"publicTodos\");\nconst handleLogout = async ()=>{\n    await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_2__.signOut)();\n};\nconst todoList = ()=>{\n    _s();\n    const session = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_2__.useSession)();\n    const [todos, setTodos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [publicTodos, setPublicTodos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [searchResults, setSearchResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    let completedTasks = 0;\n    let totalTasks = 0;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // 개별 사용자의 private todo 목록 가져오기\n        const fetchTodos = async ()=>{\n            const todosRef = firestore.collection(\"todos\");\n            const snapshot = await todosRef.get();\n            const todos = snapshot.docs.map((doc)=>doc.data());\n            setTodos(todos);\n        };\n        // 공용 todo 목록 가져오기\n        const fetchPublicTodos1 = async ()=>{\n            const publicTodosRef = firestore.collection(\"publicTodos\");\n            const snapshot = await publicTodosRef.get();\n            const todos = snapshot.docs.map((doc)=>doc.data());\n            setPublicTodos(todos);\n        };\n        // Firebase에서 개별 사용자의 private todo 목록 및 공용 todo 목록 업데이트\n        fetchTodos();\n        fetchPublicTodos1();\n    }, []);\n    // const addTodo = async() => {\n    //   // 입력값이 비어있는 경우 함수를 종료합니다.\n    //   if (input.trim() === \"\") return;\n    //   const todoCollection = collection(db, \"todos\", data?.user?.id);\n    //   const docRef = await addDoc(todoCollection, {\n    //     userId: data?.user?.id,\n    //     text: input,\n    //     completed: false,\n    //     date: selectedDate,\n    //     time: selectedTime,\n    //     datetime: new Date(),\n    //     isPublic: false,\n    //   });\n    //   const newTodos = {id: docRef.id, text: input, completed: false, date: selectedDate, time: selectedTime };\n    //     setTodos([...todos, newTodo]);\n    //     setInput(\"\");\n    //     setSelectedDate(null);\n    //     setSelectedTime(null);\n    // };\n    // private todo 추가 함수\n    const addTodo = async (text, date)=>{\n        const todosRef = firestore.collection(\"todos\");\n        await todosRef.add({\n            userId: data === null || data === void 0 ? void 0 : data.user.id,\n            text: input,\n            date: selectedDate,\n            completed: false\n        });\n        // 추가 후 목록 업데이트\n        fetchPrivateTodos();\n    };\n    // public todo 추가 함수\n    const addPublicTodo = async (text, date)=>{\n        const publicTodosRef = firestore.collection(\"publicTodos\");\n        await publicTodosRef.add({\n            text,\n            deadline,\n            completed: false\n        });\n        // 추가 후 목록 업데이트\n        fetchPublicTodos();\n    };\n    //search\n    const searchPublicTodos = async ()=>{\n        const publicTodosRef = firestore.collection(\"publicTodos\");\n        const snapshot = await publicTodosRef.get();\n        const todos = snapshot.docs.map((doc)=>doc.data());\n        const filteredTodos = todos.filter((todo)=>todo.text.includes(searchQuery));\n        setSearchResults(filteredTodos);\n    };\n    // public todo에 join 함수\n    const joinPublicTodo = async (todo)=>{\n        const privateTodosRef = firestore.collection(\"privateTodos\");\n        await privateTodosRef.add(todo);\n        // 추가 후 목록 업데이트\n        fetchPrivateTodos();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        children: \"Private Todo\"\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 133,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Enter private todo\"\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 134,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        children: \"Add\"\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 135,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        children: todos.map((todo)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"checkbox\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                                        lineNumber: 139,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    todo.text,\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        children: \"Delete\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                                        lineNumber: 141,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, todo.id, true, {\n                                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                                lineNumber: 138,\n                                columnNumber: 13\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 136,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 132,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        children: \"Public Todo\"\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 148,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Enter public todo\",\n                        value: searchQuery,\n                        onChange: (e)=>setSearchQuery(e.target.value)\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 149,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: searchPublicTodos,\n                        children: \"Search\"\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 155,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        children: searchResults.map((todo)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                children: [\n                                    todo.text,\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>joinPublicTodo(todo),\n                                        children: \"Join\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                                        lineNumber: 160,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, todo.id, true, {\n                                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                                lineNumber: 158,\n                                columnNumber: 13\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 156,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 147,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n        lineNumber: 131,\n        columnNumber: 5\n    }, undefined);\n};\n_s(todoList, \"frJyRsxU3w0jtsSRY2V/Hu66q7g=\", false, function() {\n    return [\n        next_auth_react__WEBPACK_IMPORTED_MODULE_2__.useSession\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (todoList); //     function updateAchievementRate() {\n //       const groupAchievement = document.getElementById('groupAchievement');\n //       const personalAchievement = document.getElementById('personalAchievement');\n //       const groupTasks = document.querySelectorAll('.group-room li');\n //       const totalGroupTasks = groupTasks.length;\n //       let completedGroupTasks = 0;\n //       groupTasks.forEach((task) => {\n //         if (task.querySelector('input[type=\"checkbox\"]').checked) {\n //           completedGroupTasks++;\n //         }\n //       });\n //       const groupRate = (completedGroupTasks / totalGroupTasks) * 100;\n //   groupAchievement.textContent = groupRate.toFixed(2) + '%';\n //       const personalRate = (completedTasks / totalTasks) * 100;\n //       personalAchievement.textContent = personalRate.toFixed(2) + '%';\n //     }\n // // Group Room\n //     const groupInfo = document.getElementById('groupInfo');\n //     const groupNameInput = document.getElementById('groupNameInput');\n //     const searchGroupInput = document.getElementById('searchGroupInput');\n //     let joinedGroup = null;\n //     function createGroup() {\n //       const groupName = groupNameInput.value.trim();\n //       if (groupName !== '') {\n //         const groupDiv = document.createElement('div');\n //         groupDiv.classList.add('group-room');\n //         groupDiv.setAttribute('data-group-name', groupName);\n //         groupDiv.appendChild(document.createTextNode(`Group: ${groupName}`));\n //         const groupTodoList = document.createElement('ul');\n //         groupTodoList.classList.add('group-todo-list');\n //         groupDiv.appendChild(groupTodoList);\n //         groupInfo.appendChild(groupDiv);\n //         groupNameInput.value = '';\n //         updateAchievementRate();\n //       }\n //     }\n //       function searchGroup() {\n //         const searchQuery = searchGroupInput.value.trim().toLowerCase();\n //         const groupDivs = document.querySelectorAll('.group-room');\n //         groupDivs.forEach((groupDiv) => {\n //           const groupName = groupDiv.getAttribute('data-group-name').toLowerCase();\n //           if (groupName.includes(searchQuery)) {\n //             groupDiv.style.display = 'block';\n //           } else {\n //             groupDiv.style.display = 'none';\n //           }\n //         });\n //       }\n //       function joinGroup() {\n //         const selectedGroup = document.querySelector('.group-room.selected');\n //         if (selectedGroup) {\n //           if (joinedGroup !== null) {\n //             // Leave the currently joined group\n //             leaveGroup();\n //           }\n //           joinedGroup = selectedGroup;\n //           joinedGroup.classList.add('joined');\n //           // Add group's todo list to user's todo list\n //           const groupTodoList = joinedGroup.querySelector('.group-todo-list');\n //           const groupTodos = groupTodoList.querySelectorAll('li');\n //           groupTodos.forEach((todo) => {\n //             const clonedTodo = todo.cloneNode(true);\n //             clonedTodo.querySelector('input[type=\"checkbox\"]').addEventListener('change', toggleTask);\n //             todoList.appendChild(clonedTodo);\n //             totalTasks++;\n //           });\n //           updateAchievementRate();\n //         }\n //       }\n //       function leaveGroup() {\n //         if (joinedGroup !== null) {\n //           joinedGroup.classList.remove('joined');\n //           joinedGroup = null;\n //           // Remove group's todo list from user's todo list\n //           const groupTodos = todoList.querySelectorAll('.group-room li');\n //           groupTodos.forEach((todo) => {\n //             todo.remove();\n //             totalTasks--;\n //           });\n //           updateAchievementRate();\n //         }\n //       }\n // const handlePublicTodoSearch = async (e) => {\n //   e.preventDefault();\n //   if (searchQuery) {\n //     const publicTodoQuery = query(collection(db, 'publicTodos'), where('todoText', '>=', searchQuery));\n //     const snapshot = await getDocs(publicTodoQuery);\n //     const data = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n //     setPublicTodos(data);\n //   }\n // };\n // const handlePublicTodoAdd = async (e) => {\n //   e.preventDefault();\n //   if (publicTodoText) {\n //     await addDoc(collection(db, 'publicTodos'), {\n //       todoText: publicTodoText,\n //     });\n //     setPublicTodoText('');\n //   }\n // };\n // const handlePublicTodoSearch = async (e) => {\n //   e.preventDefault();\n //   if (searchQuery) {\n //     const publicTodoQuery = query(collection(db, 'publicTodos'), where('todoText', '>=', searchQuery));\n //     const snapshot = await getDocs(publicTodoQuery);\n //     const data = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n //     setPublicTodos(data);\n //   }\n // };\n // const handlePublicTodoAdd = async (e) => {\n //   e.preventDefault();\n //   if (publicTodoText) {\n //     await addDoc(collection(db, 'publicTodos'), {\n //       todoText: publicTodoText,\n //     });\n //     setPublicTodoText('');\n //   }\n // };\n // const handleToggleTodo = async (todo) => {\n //   if (session) {\n //     const todoRef = doc(db, 'todos', todo.id);\n //     await updateDoc(todoRef, {\n //       completed: !todo.completed,\n //     });\n //   }\n // };\n // const handleDeleteTodo = async (todo) => {\n //   if (session) {\n //     const todoRef = doc(db, 'todos', todo.id);\n //     await deleteDoc(todoRef);\n //   }\n // };\n // const handleCategoryChange = (event) => {\n //   setCategory(event.target.value);\n //   setSearchQuery('');\n //   setSearchResults([]);\n // };\n // const handleJoinTodo = async (todoId) => {\n //   if (session) {\n //     const todoRef = db.collection('todos').doc(todoId);\n //     const todoDoc = await todoRef.get();\n //     if (todoDoc.exists) {\n //       const todoData = todoDoc.data();\n //       const joinedTodoRef = db.collection('todos').doc();\n //       await joinedTodoRef.set({\n //         ...todoData,\n //         userId: session.user.id,\n //         id: joinedTodoRef.id,\n //       });\n //       fetchTodos();\n //     }\n //   }\n // };\n // const handleToggleTodo = async (todoId, completed) => {\n //   if (session) {\n //     const todoRef = db.collection('todos').doc(todoId);\n //     await todoRef.update({ completed });\n //     fetchTodos();\n //   }\n // };\n // const handleDeleteTodo = async (todoId) => {\n //   if (session) {\n //     const todoRef = db.collection(\"todos\").doc(todoId);\n //     await todoRef.delete();\n //     fetchTodos();\n //   }\n // };\n // const TodoList = () => {\n //   // const [todos, setTodos] = useState([]);\n //   // const [publicTodos, setPublicTodos] = useState([]);\n //   const [input, setInput] = useState(\"\");\n //   const [publicInput, setPublicInput] = useState(\"\"); // public 카테고리 인풋 추가. \n //   const [selectedDate, setSelectedDate] = useState(null);\n //   const [selectedTime, setSelectedTime] = useState(null);\n //검색\n // const [searchInput, setSearchInput] = useState(\"\");\n //   const [searchResults, setSearchResults] = useState([]);\n //   //join\n //   const [joinableTodoId, setJoinableTodoId] = useState(null);\n // // 검색어 입력값이 변경될 때마다 검색 결과를 업데이트합니다.\n // useEffect(() => {\n //   // 검색어가 비어있는 경우 모든 publicTodos를 검색 결과로 설정합니다.\n //   if (searchInput.trim() === \"\") {\n //     setSearchResults(publicTodos.filter((publicTodo) => publicTodo.isPublic));\n //   } else {\n //     // 검색어가 있는 경우 검색어를 포함하는 publicTodos를 검색 결과로 설정합니다.\n //     const filteredResults = publicTodos.filter((publicTodo) =>\n //       publicTodo.text.toLowerCase().includes(searchInput.toLowerCase())\n //     );\n //     setSearchResults(filteredResults);\n //   }\n // }, [searchInput, publicTodos]);\n // const { data, status } = useSession();\n //   useEffect(() => {\n //     let userUnsubscribe;\n //     let publicUnsubscribe;\n //     const getUserTodos = async () => {\n //       if (!data?.user?.name) return;\n //       const userTodoQuery = query(\n //         todoCollection,\n //         where(\"userId\", \"==\", data?.user?.id),\n //         orderBy(\"datetime\", \"asc\")\n //       );\n //       userUnsubscribe = onSnapshot(userTodoQuery, (querySnapshot) => {\n //         const newTodos = [];\n //         querySnapshot.forEach((doc) => {\n //           newTodos.push({ id: doc.id, ...doc.data() });\n //         });\n //         setTodos(newTodos);\n //       });\n //     };\n //     const getPublicTodos = async () => {\n //       const publicTodoQuery = query(\n //         publicTodoCollection,\n //         orderBy(\"datetime\", \"asc\")\n //       );\n //       publicUnsubscribe = onSnapshot(publicTodoQuery, (querySnapshot) => {\n //         const newPublicTodos = [];\n //         querySnapshot.forEach((doc) => {\n //           newPublicTodos.push({ id: doc.id, ...doc.data() });\n //         });\n //         setPublicTodos(newPublicTodos);\n //       });\n //     };\n //     getUserTodos();\n //     getPublicTodos();\n //     return () => {\n //       if (userUnsubscribe) {\n //         userUnsubscribe();\n //       }\n //       if (publicUnsubscribe) {\n //         publicUnsubscribe();\n //       }\n //     };\n //   }, [data]);\n //   // addTodo 함수는 입력값을 이용하여 새로운 할 일을 목록에 추가하는 함수입니다.\n //   const toggleTodo = async (id, isPublic) => {\n //     const collectionRef = isPublic ? publicTodoCollection : todoCollection;\n //     const todoDocRef = doc(collectionRef, id);\n //     const todoSnapshot = await getDoc(todoDocRef);\n //     if(todoSnapshot.exists()) {\n //       const todoData = todoSnapshot.data();\n //       const updatedCompleted = !todoData.completed;\n //       await updateDoc(todoDocRef, { completed: updatedCompleted});\n //       const updatedTodos = isPublic ? [...publicTodos] : [...todos];\n //       const todoIndex = updatedTodos.findIndex(todo => todo.id === id);\n //       if(todoIndex !== -1) {\n //         updatedTodos[todoIndex] = {...updatedTodos[todoIndex], completed: updatedCompleted};\n //         if(isPublic) {\n //           setPublicTodos(updatedTodos);\n //         } else {\n //           setTodos(updatedTodos);\n //         }\n //       }\n //     }\n //   };  \n // toggleTodo 함수는 체크박스를 눌러 할 일의 완료 상태를 변경하는 함수입니다.\n // const toggleTodo = (id) => {\n //   // 할 일 목록에서 해당 id를 가진 할 일의 완료 상태를 반전시킵니다.\n //   const newTodos = todos.map((todo) => {\n //     if(todo.id === id) {\n //       const todoDoc = doc(todoCollection, id);\n //       updateDoc(todoDoc, { completed: !todo.completed });\n //       return { ...todo, completed: !todo.completed };\n //     } else {\n //       return todo;\n //     }\n //   });\n //   setTodos(newTodos);\n // };\n // deleteTodo 함수는 할 일을 목록에서 삭제하는 함수입니다.\n // 해당 id를 가진 할 일을 제외한 나머지 목록을 새로운 상태로 저장합니다.\n // setTodos(todos.filter((todo) => todo.id !== id));\n // 해당 id를 가진 할 일을 찾아 삭제합니다.\n // const deleteTodo = (id) => {\n //   const todoDoc = doc(todoCollection, id);\n //   deleteDoc(todoDoc);\n //   setTodos(\n //     todos.filter((todo) => {\n //       return todo.id !== id;\n //     })\n //   );\n // };\n // Join 버튼을 클릭할 때 실행되는 함수\n // const joinTodo = (id) => {\n //   // Join 가능한 publicTodo의 id를 설정합니다.\n //   setJoinableTodoId(id);\n // };\n // // Join 가능한 publicTodo의 id를 이용하여 해당 publicTodo를 가져오는 함수\n // const getJoinableTodo = (id) => {\n //   return publicTodos.find((publicTodo) => publicTodo.id === id);\n // };\n // // Join 가능한 publicTodo를 가져오고 해당 publicTodo의 구성원 수행 여부를 확인할 수 있게 합니다.\n // const joinableTodo = joinableTodoId ? getJoinableTodo(joinableTodoId) : null;\n // // Join 가능한 publicTodo에 대한 구성원 수행 여부 체크 기능\n // const checkMemberCompletion = (memberId) => {\n //   // memberId에 해당하는 사용자의 수행 여부를 확인하는 로직을 추가합니다.\n //   // 구성원의 수행 여부를 표시하거나 처리할 수 있는 컴포넌트를 렌더링합니다.\n // };\n //   return (\n //     <div className={styles.container}>\n //       <div className=\"w-1/2 pr-4\">\n //         <button className={styles.logoutButton} onClick={() => signOut()}>\n //           Logout\n //         </button>\n //       </div>\n //       <h1 className=\"text-xl mb-4 font-bold underline underline-offset-4 decoration-wavy text-pink-500\">\n //         {session.user?.name}'s Todo List\n //       </h1>\n //       <div className={styles.inputContainer}></div>\n //       Personal Todo\n //       <input\n //         type=\"text\"\n //         className=\"shadow-lg w-full p-1 mb-4 border border-gray-300 rounded\"\n //         value={input}\n //         onChange={(e) => setInput(e.target.value)}\n //       />\n //       <input\n //         type=\"date\"\n //         className={styles.itemInput}\n //         value={selectedDate}\n //         onChange={(e) => setSelectedDate(e.target.value)} \n //         />\n //       <input\n //         type=\"time\"\n //         className={styles.itemInput}\n //         value={selectedTime}\n //         onChange={(e) => setSelectedTime(e.target.value)}\n //       />\n //       <div class=\"grid\">\n //         <button\n //           className=\"w-40 justify-self-end p-1 mb-4 bg-pink-500 text-white border border-pink-500 rounded hover:bg-white hover:text-pink-500\"\n //           onClick={() => {\n //             addTodo();\n //           }}\n //         >\n //           Add Todo\n //         </button>\n //         <div className=\"w-1/2 pr-4\">\n //         <h2 className=\"text-lg font-medium mb-2\">Personal Todo List</h2>\n //         <ul>\n //           {todos\n //               .filter((todo) => !todo.completed)\n //               .map((todo) => (\n //                 <TodoItem\n //                   key={todo.id}\n //                   todo={todo}\n //                   onToggle={() => toggleTodo(todo.id)}\n //                 />\n //               ))}\n //         </ul>\n //       </div>\n //       <div className=\"w-1/2 pl-4\">\n //         <h2 className=\"text-lg font-medium mb-2\">Completed Todo</h2>\n //         <ul>\n //           {todos\n //               .filter((todo) => todo.completed)\n //               .map((todo) => (\n //                 <TodoItem\n //                   key={todo.id}\n //                   todo={todo}\n //                   onDelete={() => deleteTodo(todo.id)}\n //                 />\n //               ))} \n //         </ul>\n //       </div>  \n //     </div>\n // {/* public section rendering */}\n //     <div className={styles.inputContainer}></div>\n //       Public Todo\n //       <input\n //        type=\"text\"\n //        className=\"shadow-lg w-full p-1 mb-4 border border-gray-300 rounded\"\n //        value={searchInput}\n //        onChange={(e) => setSearchInput(e.target.value)}\n //     />\n //  {/* 검색 결과를 출력합니다. */}\n //       <ul>\n //         {searchResults\n //         .filter((publicTodo) => publicTodo.isPublic)\n //         .map((publicTodo) => (\n //           <TodoItem\n //             key={publicTodo.id}\n //             todo={publicTodo}\n //             onToggle={() => toggleTodo(publicTodo.id, publicTodo.isPublic)}\n //           />\n //         ))}\n //       </ul>\n //       <input\n //         type=\"text\"\n //         className=\"shadow-lg w-full p-1 mb-4 border border-gray-300 rounded\"\n //         value={publicInput}\n //         onChange={(e) => setPublicInput(e.target.value)}\n //       />\n //       <input\n //         type=\"date\"\n //         className={styles.itemInput}\n //         value={selectedDate}\n //         onChange={(e) => setSelectedDate(e.target.value)} \n //         />\n //       <input\n //         type=\"time\"\n //         className={styles.itemInput}\n //         value={selectedTime}\n //         onChange={(e) => setSelectedTime(e.target.value)}\n //       />\n //       <div class=\"grid\">\n //         <button\n //           className=\"w-40 justify-self-end p-1 mb-4 bg-pink-500 text-white border border-pink-500 rounded hover:bg-white hover:text-pink-500\"\n //           onClick={() => {\n //             addPublicTodo();\n //           }}\n //         >\n //           Add Todo\n //         </button>\n //         <div className=\"w-1/2 pr-4\">\n //         <h2 className=\"text-lg font-medium mb-2\">Public Todo List</h2>\n //         <ul>\n //           {publicTodos\n //               .filter((publicTodo) => publicTodo.isPublic)\n //               .filter((publicTodo) => !publicTodo.completed)\n //               .map((publicTodo) => (\n //                 <TodoItem\n //                   key={publicTodo.id}\n //                   todo={publicTodo}\n //                   onToggle={() => toggleTodo(publicTodo.id)}\n //                 />\n //               ))}\n //         </ul>\n //         {/* Join 가능한 Public Todo 출력 */}\n //         {joinableTodo && (\n //           <div>\n //             <h3>Joinable Todo: {joinableTodo.text}</h3>\n //             {/* Join 가능한 Public Todo의 구성원 수행 여부 확인 */}\n //             {/* ... */}\n //           </div>\n //         )}\n //       </div>\n //       <div className=\"w-1/2 pl-4\">\n //         <h2 className=\"text-lg font-medium mb-2\">Completed Todo</h2>\n //         <ul>\n //           {publicTodos\n //               .filter((publicTodo) => publicTodo.isPublic)\n //               .filter((publicTodo) => publicTodo.completed)\n //               .map((publicTodo) => (\n //                 <TodoItem\n //                   key={publicTodo.id}\n //                   todo={publicTodo}\n //                   onDelete={() => deleteTodo(publicTodo.id)}\n //                 />\n //               ))} \n //         </ul>\n //       </div>\n //     </div>\n //   </div>\n //   );\n // };\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/TodoList.js\n"));

/***/ })

});