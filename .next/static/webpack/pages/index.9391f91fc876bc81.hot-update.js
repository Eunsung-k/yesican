"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/TodoList.js":
/*!************************************!*\
  !*** ./src/components/TodoList.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ todoList; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/react */ \"./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_TodoItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/TodoItem */ \"./src/components/TodoItem.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/firebase */ \"./src/firebase/index.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _tailwind_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../tailwind.config */ \"./tailwind.config.js\");\n/* harmony import */ var _tailwind_config__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_tailwind_config__WEBPACK_IMPORTED_MODULE_6__);\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n// DB의 todos 컬렉션 참조를 만듭니다. 컬렉션 사용시 잘못된 컬렉션 이름 사용을 방지합니다.\nconst fetchTodos = async ()=>{\n    if (session) {\n        const todoCollection = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"todos\");\n    }\n};\n// const publicTodoCollection = collection (db, \"publicTodos\");\nconst handleLogout = async ()=>{\n    await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_2__.signOut)();\n};\n//New\nfunction todoList() {\n    _s();\n    const session1 = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_2__.useSession)();\n    const loading = session1.loading;\n    const [category, setCategory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"private\");\n    const [todos, setTodos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [publicTodos, setPublicTodos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // const [publicTodoText, setPublicTodoText] = useState('');\n    // const [searchResults, setSearchResults] = useState([]);\n    const fetchTodos = async ()=>{\n        if (session1) {\n            const todoQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"todos\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.where)(\"userId\", \"==\", session1.user.id));\n            const unsubscribe = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.onSnapshot)(todoQuery, (snapshot)=>{\n                const data = snapshot.docs.map((doc)=>({\n                        id: doc.id,\n                        ...doc.data()\n                    }));\n                setTodos(data);\n            });\n            const publicTodoQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"publicTodos\"));\n            const publicUnsubscribe = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.onSnapshot)(publicTodoQuery, (snapshot)=>{\n                const data = snapshot.docs.map((doc)=>({\n                        id: doc.id,\n                        ...doc.data()\n                    }));\n                setPublicTodos(data);\n            });\n            return ()=>{\n                unsubscribe();\n                publicUnsubscribe();\n            };\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchTodos();\n    }, [\n        session1\n    ]);\n    const handleAddTodo = async (e)=>{\n        e.preventDefault();\n        if (session1) {\n            const formData = new FormData(e.target);\n            const todoText = formData.get(\"todoText\");\n            if (todoText) {\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"todos\"), {\n                    userId: session1.user.id,\n                    category: \"private\",\n                    todoText,\n                    completed: false\n                });\n                e.target.reset();\n            }\n        }\n    };\n    const handlePublicTodoSearch = async (e)=>{\n        e.preventDefault();\n        if (searchQuery) {\n            const publicTodoQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"publicTodos\"), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.where)(\"todoText\", \">=\", searchQuery));\n            const snapshot = await getDocs(publicTodoQuery);\n            const data = snapshot.docs.map((doc)=>({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n            setPublicTodos(data);\n        }\n    };\n    const handlePublicTodoAdd = async (e)=>{\n        e.preventDefault();\n        if (publicTodoText) {\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"publicTodos\"), {\n                todoText: publicTodoText\n            });\n            setPublicTodoText(\"\");\n        }\n    };\n    // e.preventDefault();\n    // if (session) {\n    //   const formData = new FormData(e.target);\n    //   const todoText = formData.get('todoText');\n    //   if (todoText) {\n    //     await addDoc(collection(db, 'todos'), {\n    //       userId: session.user.id,\n    //       category: 'private',\n    //       todoText,\n    //       completed: false,\n    //     });\n    //     e.target.reset();\n    //   }\n    // }\n    // const handlePublicTodoSearch = async (e) => {\n    //   e.preventDefault();\n    //   if (searchQuery) {\n    //     const publicTodoQuery = query(collection(db, 'publicTodos'), where('todoText', '>=', searchQuery));\n    //     const snapshot = await getDocs(publicTodoQuery);\n    //     const data = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n    //     setPublicTodos(data);\n    //   }\n    // };\n    // const handlePublicTodoAdd = async (e) => {\n    //   e.preventDefault();\n    //   if (publicTodoText) {\n    //     await addDoc(collection(db, 'publicTodos'), {\n    //       todoText: publicTodoText,\n    //     });\n    //     setPublicTodoText('');\n    //   }\n    // };\n    const handleToggleTodo = async (todo)=>{\n        if (session1) {\n            const todoRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"todos\", todo.id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.updateDoc)(todoRef, {\n                completed: !todo.completed\n            });\n        }\n    };\n    const handleDeleteTodo = async (todo)=>{\n        if (session1) {\n            const todoRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_4__.db, \"todos\", todo.id);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.deleteDoc)(todoRef);\n        }\n    };\n    // const fetchTodos = async () => {\n    //   if (session) {\n    //     const todoRef = collection('todos');\n    //     const querySnapshot = await todoRef\n    //       .where('userId', '==', session.user.id)\n    //       .where('category', '==', category)\n    //       .get();\n    //     const data = querySnapshot.docs.map(doc => doc.data());\n    //     setTodos(data);\n    //   }\n    // };\n    const handleCategoryChange = (event)=>{\n        setCategory(event.target.value);\n        setSearchQuery(\"\");\n        setSearchResults([]);\n    };\n    const handleInputChange = (event)=>{\n        setSearchQuery(event.target.value);\n        if (event.target.value.trim() === \"\") {\n            setSearchResults([]);\n        } else {\n            const results = todos.filter((todo)=>todo.todoText.toLowerCase().includes(event.target.value.toLowerCase()));\n            setSearchResults(results);\n        }\n    };\n    const handleJoinTodo = async (todoId)=>{\n        if (session1) {\n            const todoRef = _firebase__WEBPACK_IMPORTED_MODULE_4__.db.collection(\"todos\").doc(todoId);\n            const todoDoc = await todoRef.get();\n            if (todoDoc.exists) {\n                const todoData = todoDoc.data();\n                const joinedTodoRef = _firebase__WEBPACK_IMPORTED_MODULE_4__.db.collection(\"todos\").doc();\n                await joinedTodoRef.set({\n                    ...todoData,\n                    userId: session1.user.id,\n                    id: joinedTodoRef.id\n                });\n                fetchTodos();\n            }\n        }\n    };\n    // const handleToggleTodo = async (todoId, completed) => {\n    //   if (session) {\n    //     const todoRef = db.collection('todos').doc(todoId);\n    //     await todoRef.update({ completed });\n    //     fetchTodos();\n    //   }\n    // };\n    // const handleDeleteTodo = async (todoId) => {\n    //   if (session) {\n    //     const todoRef = db.collection(\"todos\").doc(todoId);\n    //     await todoRef.delete();\n    //     fetchTodos();\n    //   }\n    // };\n    if (loading) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            children: \"Loading...\"\n        }, void 0, false, {\n            fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n            lineNumber: 230,\n            columnNumber: 10\n        }, this);\n    }\n    if (!session1) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Please sign in to view your todos.\"\n                }, void 0, false, {\n                    fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                    lineNumber: 236,\n                    columnNumber: 7\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: signIn,\n                    children: \"Sign In\"\n                }, void 0, false, {\n                    fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                    lineNumber: 237,\n                    columnNumber: 7\n                }, this)\n            ]\n        }, void 0, true);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: [\n                    \"Hello, \",\n                    session1.user.name,\n                    \"!\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 243,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>(0,next_auth_react__WEBPACK_IMPORTED_MODULE_2__.signOut)(),\n                children: \"Sign out\"\n            }, void 0, false, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 244,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                children: \"Private Todos\"\n            }, void 0, false, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 245,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleAddTodo,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        name: \"todoText\"\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 247,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"submit\",\n                        children: \"Add\"\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 248,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 246,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                children: todos.map((todo)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"checkbox\",\n                                checked: todo.completed,\n                                onChange: ()=>handleToggleTodo(todo)\n                            }, void 0, false, {\n                                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                                lineNumber: 253,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: todo.todoText\n                            }, void 0, false, {\n                                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                                lineNumber: 258,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>handleDeleteTodo(todo),\n                                children: \"Delete\"\n                            }, void 0, false, {\n                                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                                lineNumber: 259,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, todo.id, true, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 252,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 250,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                children: \"Public Todos\"\n            }, void 0, false, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 264,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handlePublicTodoSearch,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        value: searchQuery,\n                        onChange: (e)=>setSearchQuery(e.target.value)\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 266,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"submit\",\n                        children: \"Search\"\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 267,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 265,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                children: publicTodos.map((publicTodo)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            children: publicTodo.todoText\n                        }, void 0, false, {\n                            fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                            lineNumber: 272,\n                            columnNumber: 13\n                        }, this)\n                    }, publicTodo.id, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 271,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 269,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handlePublicTodoAdd,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        value: publicTodoText,\n                        onChange: (e)=>setPublicTodoText(e.target.value)\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 277,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"submit\",\n                        children: \"Add\"\n                    }, void 0, false, {\n                        fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                        lineNumber: 278,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/eunsungkim/Documents/GitHub/yesican/src/components/TodoList.js\",\n                lineNumber: 276,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n} //         <div>\n //           <label>\n //             Category:\n //             <select value={category} onChange={handleCategoryChange}>\n //               <option value=\"private\">Private</option>\n //               <option value=\"public\">Public</option>\n //             </select>\n //           </label>\n //         </div>\n //         {category === 'private' && (\n //           <>\n //             <h2>Private Todos</h2>\n //             <ul>\n //               {todos.map((todo) => (\n //                 <li key={todo.id}>\n //                   {todo.todoText}{' '}\n //                   <button onClick={() => handleDeleteTodo(todo.id)}>Delete</button>\n //                 </li>\n //               ))}\n //             </ul>\n //               <h2>Add Private Todo</h2>\n //               <form\n //                 onSubmit={async (e) => {\n //                   e.preventDefault();\n //                   const formData = new FormData(e.target);\n //                   const todoText = formData.get('todoText');\n //                   await db.collection(\"todos\").add({\n //                     userId: session.user.id,\n //                     category,\n //                     todoText,\n //                     completed: false,\n //                   });\n //                   e.target.reset();\n //                   fetchTodos();\n //                 }}\n //               >\n //                 <input type=\"text\" name=\"todoText\" placeholder=\"Todo Text\" required />\n //                 <button type=\"submit\">Add</button>\n //               </form>\n //             </>\n //           )}\n //           {category === 'public' && (\n //             <>\n //               <h2>Public Todos</h2>\n //               <div>\n //                 <input\n //                   type=\"text\"\n //                   placeholder=\"Search Todos\"\n //                   value={searchQuery}\n //                   onChange={handleInputChange}\n //                 />\n //               </div>\n //               <ul>\n //               {searchResults.map((todo) => (\n //                   <li key={todo.id}>\n //                     {todo.todoText}{' '}\n //                     <button onClick={() => handleJoinTodo(todo.id)}>Join</button>\n //                   </li>\n //                 ))}\n //               </ul>\n //             </>\n //           )}\n //         </>\n //       )}\n //     </div>\n //   );\n // }\n // TodoList 컴포넌트를 정의합니다.\n // const TodoList = () => {\n // const [todos, setTodos] = useState([]);\n // const [publicTodos, setPublicTodos] = useState([]);\n // const [input, setInput] = useState(\"\");\n // const [publicInput, setPublicInput] = useState(\"\"); // public 카테고리 인풋 추가. \n // const [selectedDate, setSelectedDate] = useState(null);\n // const [selectedTime, setSelectedTime] = useState(null);\n //검색\n //   const [searchInput, setSearchInput] = useState(\"\");\n //   const [searchResults, setSearchResults] = useState([]);\n //   //join\n //   const [joinableTodoId, setJoinableTodoId] = useState(null);\n // // 검색어 입력값이 변경될 때마다 검색 결과를 업데이트합니다.\n //   useEffect(() => {\n //     // 검색어가 비어있는 경우 모든 publicTodos를 검색 결과로 설정합니다.\n //     if (searchInput.trim() === \"\") {\n //       setSearchResults(publicTodos.filter((publicTodo) => publicTodo.isPublic));\n //     } else {\n //       // 검색어가 있는 경우 검색어를 포함하는 publicTodos를 검색 결과로 설정합니다.\n //       const filteredResults = publicTodos.filter((publicTodo) =>\n //         publicTodo.text.toLowerCase().includes(searchInput.toLowerCase())\n //       );\n //       setSearchResults(filteredResults);\n //     }\n //   }, [searchInput, publicTodos]);\n //   const { data, status } = useSession();\n //   let completedTasks = 0;\n //   let totalTasks = 0;\n //   useEffect(() => {\n //     let userUnsubscribe;\n //     let publicUnsubscribe;\n //     const getUserTodos = async () => {\n //       if (!data?.user?.name) return;\n //       const userTodoQuery = query(\n //         todoCollection,\n //         where(\"userId\", \"==\", data?.user?.id),\n //         orderBy(\"datetime\", \"asc\")\n //       );\n //       userUnsubscribe = onSnapshot(userTodoQuery, (querySnapshot) => {\n //         const newTodos = [];\n //         querySnapshot.forEach((doc) => {\n //           newTodos.push({ id: doc.id, ...doc.data() });\n //         });\n //         setTodos(newTodos);\n //       });\n //     };\n //     const getPublicTodos = async () => {\n //       const publicTodoQuery = query(\n //         publicTodoCollection,\n //         orderBy(\"datetime\", \"asc\")\n //       );\n //       publicUnsubscribe = onSnapshot(publicTodoQuery, (querySnapshot) => {\n //         const newPublicTodos = [];\n //         querySnapshot.forEach((doc) => {\n //           newPublicTodos.push({ id: doc.id, ...doc.data() });\n //         });\n //         setPublicTodos(newPublicTodos);\n //       });\n //     };\n //     getUserTodos();\n //     getPublicTodos();\n //     return () => {\n //       if (userUnsubscribe) {\n //         userUnsubscribe();\n //       }\n //       if (publicUnsubscribe) {\n //         publicUnsubscribe();\n //       }\n //     };\n //   }, [data]);\n //   // addTodo 함수는 입력값을 이용하여 새로운 할 일을 목록에 추가하는 함수입니다.\n //   const addTodo = async() => {\n //     // 입력값이 비어있는 경우 함수를 종료합니다.\n //     if (input.trim() === \"\") return;\n //     const todoCollection = collection(db, \"todos\", data?.user?.id);\n //     const docRef = await addDoc(todoCollection, {\n //       userId: data?.user?.id,\n //       text: input,\n //       completed: false,\n //       date: selectedDate,\n //       time: selectedTime,\n //       datetime: new Date(),\n //       isPublic: false,\n //     });\n //     const newTodo = {id: docRef.id, text: input, completed: false, date: selectedDate, time: selectedTime };\n //     setTodos([...todos, newTodo]);\n //     setInput(\"\");\n //     setSelectedDate(null);\n //     setSelectedTime(null);\n //   };\n //   const addPublicTodo = async() => {\n //     if (publicInput.trim() === \"\") return;\n //     const publicTodocollection = collection(db, \"todos\");\n //     const docRef = await addDoc(publicTodoCollection, {\n //       text: publicInput,\n //       completed: false,\n //       date: selectedDate,\n //       time: selectedTime,\n //       datetime: new Date(),\n //       isPublic: true,\n //     });\n //     const newPublicTodo = {id: docRef.id, text: publicInput, completed: false, date: selectedDate, time: selectedTime};\n //     setPublicTodos([...publicTodos, newPublicTodo]);\n //     setPublicInput(\"\");\n //     setSelectedDate(null);\n //     setSelectedTime(null);\n //   };\n //   const toggleTodo = async (id, isPublic) => {\n //     const collectionRef = isPublic ? publicTodoCollection : todoCollection;\n //     const todoDocRef = doc(collectionRef, id);\n //     const todoSnapshot = await getDoc(todoDocRef);\n //     if(todoSnapshot.exists()) {\n //       const todoData = todoSnapshot.data();\n //       const updatedCompleted = !todoData.completed;\n //       await updateDoc(todoDocRef, { completed: updatedCompleted});\n //       const updatedTodos = isPublic ? [...publicTodos] : [...todos];\n //       const todoIndex = updatedTodos.findIndex(todo => todo.id === id);\n //       if(todoIndex !== -1) {\n //         updatedTodos[todoIndex] = {...updatedTodos[todoIndex], completed: updatedCompleted};\n //         if(isPublic) {\n //           setPublicTodos(updatedTodos);\n //         } else {\n //           setTodos(updatedTodos);\n //         }\n //       }\n //     }\n //   };  \n // toggleTodo 함수는 체크박스를 눌러 할 일의 완료 상태를 변경하는 함수입니다.\n // const toggleTodo = (id) => {\n //   // 할 일 목록에서 해당 id를 가진 할 일의 완료 상태를 반전시킵니다.\n //   const newTodos = todos.map((todo) => {\n //     if(todo.id === id) {\n //       const todoDoc = doc(todoCollection, id);\n //       updateDoc(todoDoc, { completed: !todo.completed });\n //       return { ...todo, completed: !todo.completed };\n //     } else {\n //       return todo;\n //     }\n //   });\n //   setTodos(newTodos);\n // };\n // deleteTodo 함수는 할 일을 목록에서 삭제하는 함수입니다.\n // 해당 id를 가진 할 일을 제외한 나머지 목록을 새로운 상태로 저장합니다.\n // setTodos(todos.filter((todo) => todo.id !== id));\n // 해당 id를 가진 할 일을 찾아 삭제합니다.\n // const deleteTodo = (id) => {\n //   const todoDoc = doc(todoCollection, id);\n //   deleteDoc(todoDoc);\n //   setTodos(\n //     todos.filter((todo) => {\n //       return todo.id !== id;\n //     })\n //   );\n // };\n // Join 버튼을 클릭할 때 실행되는 함수\n // const joinTodo = (id) => {\n //   // Join 가능한 publicTodo의 id를 설정합니다.\n //   setJoinableTodoId(id);\n // };\n // // Join 가능한 publicTodo의 id를 이용하여 해당 publicTodo를 가져오는 함수\n // const getJoinableTodo = (id) => {\n //   return publicTodos.find((publicTodo) => publicTodo.id === id);\n // };\n // // Join 가능한 publicTodo를 가져오고 해당 publicTodo의 구성원 수행 여부를 확인할 수 있게 합니다.\n // const joinableTodo = joinableTodoId ? getJoinableTodo(joinableTodoId) : null;\n // // Join 가능한 publicTodo에 대한 구성원 수행 여부 체크 기능\n // const checkMemberCompletion = (memberId) => {\n //   // memberId에 해당하는 사용자의 수행 여부를 확인하는 로직을 추가합니다.\n //   // 구성원의 수행 여부를 표시하거나 처리할 수 있는 컴포넌트를 렌더링합니다.\n // };\n // return (\n //   <div className={styles.container}>\n //     <div className=\"w-1/2 pr-4\">\n //       <button className={styles.logoutButton} onClick={() => signOut()}>\n //         Logout\n //       </button>\n //     </div>\n //     <h1 className=\"text-xl mb-4 font-bold underline underline-offset-4 decoration-wavy text-pink-500\">\n //       {data?.user?.name}'s Todo List\n //     </h1>\n //     <div className={styles.inputContainer}></div>\n //     Personal Todo\n //     <input\n //       type=\"text\"\n //       className=\"shadow-lg w-full p-1 mb-4 border border-gray-300 rounded\"\n //       value={input}\n //       onChange={(e) => setInput(e.target.value)}\n //     />\n //     <input\n //       type=\"date\"\n //       className={styles.itemInput}\n //       value={selectedDate}\n //       onChange={(e) => setSelectedDate(e.target.value)} \n //       />\n //     <input\n //       type=\"time\"\n //       className={styles.itemInput}\n //       value={selectedTime}\n //       onChange={(e) => setSelectedTime(e.target.value)}\n //     />\n //     <div class=\"grid\">\n //       <button\n //         className=\"w-40 justify-self-end p-1 mb-4 bg-pink-500 text-white border border-pink-500 rounded hover:bg-white hover:text-pink-500\"\n //         onClick={() => {\n //           addTodo();\n //         }}\n //       >\n //         Add Todo\n //       </button>\n //       <div className=\"w-1/2 pr-4\">\n //       <h2 className=\"text-lg font-medium mb-2\">Personal Todo List</h2>\n //       <ul>\n //         {todos\n //             .filter((todo) => !todo.completed)\n //             .map((todo) => (\n //               <TodoItem\n //                 key={todo.id}\n //                 todo={todo}\n //                 onToggle={() => toggleTodo(todo.id)}\n //               />\n //             ))}\n //       </ul>\n //     </div>\n //     <div className=\"w-1/2 pl-4\">\n //       <h2 className=\"text-lg font-medium mb-2\">Completed Todo</h2>\n //       <ul>\n //         {todos\n //             .filter((todo) => todo.completed)\n //             .map((todo) => (\n //               <TodoItem\n //                 key={todo.id}\n //                 todo={todo}\n //                 onDelete={() => deleteTodo(todo.id)}\n //               />\n //             ))} \n //       </ul>\n //     </div>  \n //   </div>\n /* public section rendering\n    <div className={styles.inputContainer}></div>\n      Public Todo\n      <input\n       type=\"text\"\n       className=\"shadow-lg w-full p-1 mb-4 border border-gray-300 rounded\"\n       value={searchInput}\n       onChange={(e) => setSearchInput(e.target.value)}\n    />\n\n{/* 검색 결과를 출력합니다. */  //       <ul>\n //         {searchResults\n //         .filter((publicTodo) => publicTodo.isPublic)\n //         .map((publicTodo) => (\n //           <TodoItem\n //             key={publicTodo.id}\n //             todo={publicTodo}\n //             onToggle={() => toggleTodo(publicTodo.id, publicTodo.isPublic)}\n //           />\n //         ))}\n //       </ul>\n //       <input\n //         type=\"text\"\n //         className=\"shadow-lg w-full p-1 mb-4 border border-gray-300 rounded\"\n //         value={publicInput}\n //         onChange={(e) => setPublicInput(e.target.value)}\n //       />\n //       <input\n //         type=\"date\"\n //         className={styles.itemInput}\n //         value={selectedDate}\n //         onChange={(e) => setSelectedDate(e.target.value)} \n //         />\n //       <input\n //         type=\"time\"\n //         className={styles.itemInput}\n //         value={selectedTime}\n //         onChange={(e) => setSelectedTime(e.target.value)}\n //       />\n //       <div class=\"grid\">\n //         <button\n //           className=\"w-40 justify-self-end p-1 mb-4 bg-pink-500 text-white border border-pink-500 rounded hover:bg-white hover:text-pink-500\"\n //           onClick={() => {\n //             addPublicTodo();\n //           }}\n //         >\n //           Add Todo\n //         </button>\n //         <div className=\"w-1/2 pr-4\">\n //         <h2 className=\"text-lg font-medium mb-2\">Public Todo List</h2>\n //         <ul>\n //           {publicTodos\n //               .filter((publicTodo) => publicTodo.isPublic)\n //               .filter((publicTodo) => !publicTodo.completed)\n //               .map((publicTodo) => (\n //                 <TodoItem\n //                   key={publicTodo.id}\n //                   todo={publicTodo}\n //                   onToggle={() => toggleTodo(publicTodo.id)}\n //                 />\n //               ))}\n //         </ul>\n //         {/* Join 가능한 Public Todo 출력 */}\n //         {joinableTodo && (\n //           <div>\n //             <h3>Joinable Todo: {joinableTodo.text}</h3>\n //             {/* Join 가능한 Public Todo의 구성원 수행 여부 확인 */}\n //             {/* ... */}\n //           </div>\n //         )}\n //       </div>\n //       <div className=\"w-1/2 pl-4\">\n //         <h2 className=\"text-lg font-medium mb-2\">Completed Todo</h2>\n //         <ul>\n //           {publicTodos\n //               .filter((publicTodo) => publicTodo.isPublic)\n //               .filter((publicTodo) => publicTodo.completed)\n //               .map((publicTodo) => (\n //                 <TodoItem\n //                   key={publicTodo.id}\n //                   todo={publicTodo}\n //                   onDelete={() => deleteTodo(publicTodo.id)}\n //                 />\n //               ))} \n //         </ul>\n //       </div>\n //     </div>\n //   </div>\n //   );\n // }; */}\n // export default TodoList;\n_s(todoList, \"3ZxtyBrATegEk1PBOzKnrNMB7Wk=\", false, function() {\n    return [\n        next_auth_react__WEBPACK_IMPORTED_MODULE_2__.useSession\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/TodoList.js\n"));

/***/ })

});